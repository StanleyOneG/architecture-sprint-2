services:


  sharding-repl-cache:
    container_name: sharding-repl-cache
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - configSrv1
      - configSrv2
      - configSrv3
      - shard01-a
      - shard01-b
      - shard01-c
      - shard02-a
      - shard02-b
      - shard02-c
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://redis:6379"
    networks:
      app-network:
          ipv4_address: 173.17.0.21
  

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      app-network:
        ipv4_address: 173.17.0.2

  configSrv1:
    image: mongo:latest
    container_name: configSrv1
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data-1:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s


  configSrv2:
    image: mongo:latest
    container_name: configSrv2
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    volumes:
      - config-data-2:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27018"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  configSrv3:
    image: mongo:latest
    container_name: configSrv3
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.12
    volumes:
      - config-data-3:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27019"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

 # Shard 1
  shard01-a:
    image: mongo:latest
    container_name: shard01-node-a
    restart: always
    ports:
      - "27016:27016"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard01-data-1:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard01",
        "--bind_ip_all",
        "--port",
        "27016"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  shard01-b:
    image: mongo:latest
    container_name: shard01-node-b
    restart: always
    ports:
      - "27015:27015"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard01-data-2:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard01",
        "--bind_ip_all",
        "--port",
        "27015"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  shard01-c:
    image: mongo:latest
    container_name: shard01-node-c
    restart: always
    ports:
      - "27014:27014"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    volumes:
      - shard01-data-3:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard01",
        "--bind_ip_all",
        "--port",
        "27014"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s


 # Shard 2
  shard02-a:
    image: mongo:latest
    container_name: shard02-node-a
    restart: always
    ports:
      - "27013:27013"
    networks:
      app-network:
        ipv4_address: 173.17.0.6
    volumes:
      - shard02-data-1:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard02",
        "--bind_ip_all",
        "--port",
        "27013"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  shard02-b:
    image: mongo:latest
    container_name: shard02-node-b
    restart: always
    ports:
      - "27012:27012"
    networks:
      app-network:
        ipv4_address: 173.17.0.5
    volumes:
      - shard02-data-2:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard02",
        "--bind_ip_all",
        "--port",
        "27012"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  shard02-c:
    image: mongo:latest
    container_name: shard02-node-c
    restart: always
    ports:
      - "27011:27011"
    networks:
      app-network:
        ipv4_address: 173.17.0.4
    volumes:
      - shard02-data-3:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard02",
        "--bind_ip_all",
        "--port",
        "27011"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

# Router
  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.13
    command:
      [
        "mongos",
        "--configdb", 
        "config_server/configSrv1:27017,configSrv2:27018,configSrv3:27019",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data-1:
  config-data-2:
  config-data-3:
  shard01-data-1:
  shard01-data-2:
  shard01-data-3:
  shard02-data-1:
  shard02-data-2:
  shard02-data-3:
  redis_data:
